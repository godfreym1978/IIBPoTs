
DECLARE BO_FIRST SHARED BOOLEAN TRUE;
CREATE COMPUTE MODULE MF_DBquery_FetchDBRecords
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		IF(BO_FIRST) THEN
			SET Environment.Variables.DBValue[] = PASSTHRU('SELECT SYMBOL FROM STOCKQUOTE ');
			SET BO_FIRST = FALSE; 
		ELSE
			SET Environment.Variables.DBValue[] = PASSTHRU('SELECT SYMBOL FROM STOCKQUOTE WHERE FUND IS NULL');
		END IF;
		
		
		DECLARE envRef REFERENCE TO Environment.Variables.DBValue[1];
		DECLARE INT_CTR INT 1;
				
		WHILE LASTMOVE(envRef) DO
			SET OutputRoot.XMLNSC.StockQuote.Symbol[INT_CTR]=envRef.SYMBOL;			
			MOVE envRef NEXTSIBLING REPEAT TYPE NAME;
			SET INT_CTR = INT_CTR + 1;
			
		END WHILE;
		
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

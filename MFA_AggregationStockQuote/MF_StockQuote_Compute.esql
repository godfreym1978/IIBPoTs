

CREATE COMPUTE MODULE MF_StockQuote_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET Environment.MQMD = InputRoot.MQMD;
		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.StockQuote.Symbol[1];
		DECLARE sh NAMESPACE 'http://www.webserviceX.NET/';
		
		WHILE LASTMOVE(inRef) DO
			SET OutputRoot.XMLNSC.sh:GetQuote.sh:symbol=inRef;			
			PROPAGATE TO TERMINAL 'out';
			--PROPAGATE;
			MOVE inRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;

		SET OutputRoot.MQMD = Environment.MQMD;
		SET OutputRoot.MQMD.CorrelId = Environment.MQMD.MsgId;
		DECLARE envRef REFERENCE TO Environment.Response.XMLNSC;
		DECLARE INT_CTR INT 1;
		WHILE LASTMOVE(envRef) DO
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Name=envRef.StockQuotes.Stock.Name;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Symbol=envRef.StockQuotes.Stock.Symbol;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Last=envRef.StockQuotes.Stock.Last;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Date=envRef.StockQuotes.Stock.Date;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Time=envRef.StockQuotes.Stock.Time;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Change=envRef.StockQuotes.Stock.Change;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Open=envRef.StockQuotes.Stock.Open;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].High=envRef.StockQuotes.Stock.High;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].Low=envRef.StockQuotes.Stock.Low;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].PreviousClose=envRef.StockQuotes.Stock.PreviousClose;
			SET OutputRoot.XMLNSC.GetQuote.symbol[INT_CTR].PercentageChange=envRef.StockQuotes.Stock.PercentageChange;
			
			SET INT_CTR = INT_CTR + 1;
						
			MOVE envRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;
		
		
		
		PROPAGATE TO TERMINAL 'out1'; 
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

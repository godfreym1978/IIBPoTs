

CREATE COMPUTE MODULE MF_AggRep_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE inRef REFERENCE TO InputRoot.ComIbmAggregateReplyBody.StockRep;
		DECLARE I INT 1;
		--CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
		 
		WHILE LASTMOVE(inRef) DO
			IF EXISTS(inRef.XMLNSC.StockQuotes[]) THEN
				SET OutputRoot.XMLNSC.StockQuotes.Stock[I]=inRef.XMLNSC.StockQuotes.Stock;			
				SET I = I+1;
			ELSE
				--DECLARE outMsg BLOB ASBITSTREAM(inRef.BLOB.BLOB, inRef.Properties.Encoding, inRef.Properties.CodedCharSetId);
				--CREATE LASTCHILD OF OutputRoot DOMAIN('MQMD') PARSE(outMsg);
				--CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN('MQMD') PARSE(outMsg);
				CREATE NEXTSIBLING OF OutputRoot.Properties 
						DOMAIN('MQMD') 
						PARSE(inRef.BLOB.BLOB
							CCSID inRef.Properties.CodedCharSetId
							TYPE 'MQMD');

			END IF;
			
			MOVE inRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;

		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
